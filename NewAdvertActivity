package com.example.lostfound;

import android.Manifest;
import android.content.pm.PackageManager;
import android.location.Location;
import android.os.Bundle;
import android.os.Looper;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.RadioGroup;
import android.widget.Toast;

import androidx.annotation.NonNull;
import androidx.appcompat.app.AppCompatActivity;
import androidx.core.app.ActivityCompat;
import androidx.core.content.ContextCompat;

import com.google.android.gms.location.FusedLocationProviderClient;
import com.google.android.gms.location.LocationCallback;
import com.google.android.gms.location.LocationRequest;
import com.google.android.gms.location.LocationResult;
import com.google.android.gms.location.LocationServices;

public class NewAdvertActivity extends AppCompatActivity {

    private EditText editTextName, editTextPhone, editTextLocation, editTextDate, editTextDescription;
    private Button btnGetLocation, btnSave;
    private RadioGroup radioGroupType;

    private FusedLocationProviderClient fusedLocationClient;
    private double currentLatitude = 0.0;
    private double currentLongitude = 0.0;

    private static final int LOCATION_PERMISSION_REQUEST_CODE = 1;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_new_advert);

        editTextName = findViewById(R.id.editTextName);
        editTextPhone = findViewById(R.id.editTextPhone);
        editTextLocation = findViewById(R.id.editTextLocation);
        editTextDate = findViewById(R.id.editTextDate);
        editTextDescription = findViewById(R.id.editTextDescription);
        radioGroupType = findViewById(R.id.radioGroupType);
        btnGetLocation = findViewById(R.id.btnGetCurrentLocation);
        btnSave = findViewById(R.id.btnSaveAdvert);

        fusedLocationClient = LocationServices.getFusedLocationProviderClient(this);

        btnGetLocation.setOnClickListener(v -> checkLocationPermission());

        btnSave.setOnClickListener(v -> saveAdvert());
    }

    private void checkLocationPermission() {
        if (ContextCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION)
                != PackageManager.PERMISSION_GRANTED) {
            ActivityCompat.requestPermissions(this,
                    new String[]{Manifest.permission.ACCESS_FINE_LOCATION},
                    LOCATION_PERMISSION_REQUEST_CODE);
        } else {
            getCurrentLocation();
        }
    }

    private void getCurrentLocation() {
        LocationRequest locationRequest = LocationRequest.create();
        locationRequest.setPriority(LocationRequest.PRIORITY_HIGH_ACCURACY);
        locationRequest.setInterval(1000);
        locationRequest.setNumUpdates(1);

        fusedLocationClient.requestLocationUpdates(locationRequest, new LocationCallback() {
            @Override
            public void onLocationResult(LocationResult result) {
                if (result == null || result.getLastLocation() == null) {
                    Toast.makeText(NewAdvertActivity.this, "Location not available", Toast.LENGTH_SHORT).show();
                    return;
                }

                Location location = result.getLastLocation();
                currentLatitude = location.getLatitude();
                currentLongitude = location.getLongitude();
                editTextLocation.setText(currentLatitude + ", " + currentLongitude);
            }
        }, Looper.getMainLooper());
    }

    private void saveAdvert() {
        String name = editTextName.getText().toString();
        String phone = editTextPhone.getText().toString();
        String location = editTextLocation.getText().toString();
        String date = editTextDate.getText().toString();
        String description = editTextDescription.getText().toString();
        String postType = (radioGroupType.getCheckedRadioButtonId() == R.id.radioLost) ? "Lost" : "Found";

        // Basic validation
        if (name.isEmpty() || phone.isEmpty() || location.isEmpty() || date.isEmpty() || description.isEmpty()) {
            Toast.makeText(this, "Please fill in all fields", Toast.LENGTH_SHORT).show();
            return;
        }

        Advert advert = new Advert(postType, name, phone, currentLatitude, currentLongitude, location, date, description);
        AdvertDatabase db = AdvertDatabase.getInstance(this);
        db.advertDao().insert(advert);

        Toast.makeText(this, "Advert saved!", Toast.LENGTH_SHORT).show();
        finish();
    }

    @Override
    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions,
                                           @NonNull int[] grantResults) {
        super.onRequestPermissionsResult(requestCode, permissions, grantResults);

        if (requestCode == LOCATION_PERMISSION_REQUEST_CODE &&
                grantResults.length > 0 &&
                grantResults[0] == PackageManager.PERMISSION_GRANTED) {
            getCurrentLocation();
        } else {
            Toast.makeText(this, "Permission denied", Toast.LENGTH_SHORT).show();
        }
    }
}
